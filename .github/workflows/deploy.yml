name: Build and Deploy to Cloud Run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: winged-precept-443218-v8
  SERVICE_NAME: home-page-tokyo
  REGION: asia-northeast1

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with: 
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg webp

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Build static assets
        run: |
          make clean
          make build
          echo "STATIC_VERSION=$(date +%s)" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Upload static assets to GCS
        run: |
          # GCS Î≤ÑÌÇ∑Ïóê Ï†ïÏ†Å ÌååÏùº ÏóÖÎ°úÎìú
          gsutil -m rsync -r -d static gs://${{ secrets.GCS_BUCKET }}/static
          
          # Ï∫êÏãú Ìó§Îçî ÏÑ§Ï†ï
          gsutil -m setmeta -h "Cache-Control:public, max-age=604800, immutable" gs://${{ secrets.GCS_BUCKET }}/static/css/**
          gsutil -m setmeta -h "Cache-Control:public, max-age=604800, immutable" gs://${{ secrets.GCS_BUCKET }}/static/js/**
          gsutil -m setmeta -h "Cache-Control:public, max-age=2592000, immutable" gs://${{ secrets.GCS_BUCKET }}/static/img/**
          gsutil -m setmeta -h "Cache-Control:public, max-age=604800" gs://${{ secrets.GCS_BUCKET }}/static/videos/**

      - name: Build and push Docker image
        run: |
          gcloud builds submit --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --memory 2Gi \
            --cpu 2 \
            --min-instances 1 \
            --max-instances 5 \
            --concurrency 80 \
            --set-env-vars STATIC_CDN_URL=https://static.${{ secrets.DOMAIN }},STATIC_VERSION=${{ env.STATIC_VERSION }}

      - name: Health check
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
          echo "üöÄ Deployed to: $SERVICE_URL"
          
          # Ìó¨Ïä§Ï≤¥ÌÅ¨ (5Ìöå ÏãúÎèÑ)
          for i in {1..5}; do
            if curl -f -s "$SERVICE_URL" > /dev/null; then
              echo "‚úÖ Health check passed ($i/5)"
              break
            else
              echo "‚ùå Health check failed ($i/5)"
              if [ $i -eq 5 ]; then
                exit 1
              fi
              sleep 10
            fi
          done